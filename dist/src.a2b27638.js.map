{"version":3,"sources":["src/index.js"],"names":["tablaValores","document","getElementById","tablaArbitrajes","valoresDolar","blue","nombre","compra","venta","mep","ccl","crypto","solidario","oficial","diferenciasDolar","generarFilaValores","tipoDolar","generarTablaValores","innerHTML","generarDiferencias","valores","diferencialesFinal","Object","entries","valorDolarAntiguo","claveAntigua","diferenciales","compraAntiguo","valorDolarNuevo","claveNueva","ventaNuevo","diferencial","generarFila","fila","filaValor","valor","isNaN","toFixed","generarTablaArbitrajes","keys","dolar","dolarActual","porcentajes","values","filaDiferencias","buscarDolar","url","options","method","fetch","response","json","data","parseFloat","replace","buscarDolarCripto","valorUsdt","bid","ask","cargarDatos","dolarOficial","dolarBlue","dolarCcl","dolarSolidario","dolarMep","dolarCripto","main"],"mappings":"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","file":"src.a2b27638.js","sourceRoot":"..","sourcesContent":["const tablaValores = document.getElementById(\"valores-dolar-tabla\");\nconst tablaArbitrajes = document.getElementById(\"arbitrajes\");\n\nconst valoresDolar = {\n  blue: { nombre: \"Blue\", compra: 0, venta: 0 },\n  mep: { nombre: \"MEP\", compra: 0, venta: 0 },\n  ccl: { nombre: \"CCL\", compra: 0, venta: 0 },\n  crypto: { nombre: \"Crypto\", compra: 0, venta: 0 },\n  solidario: { nombre: \"Solidario\", venta: 0 },\n  oficial: { nombre: \"Oficial\", compra: 0, venta: 0 },\n};\nlet diferenciasDolar = {};\n\nfunction generarFilaValores(tipoDolar) {\n  return `<tr>\n  <td>${tipoDolar.nombre}</td>\n  <td>$${tipoDolar.compra || 0}</td>\n  <td>$${tipoDolar.venta || 0}</td>\n  </tr>`;\n}\n\nfunction generarTablaValores() {\n  tablaValores.innerHTML += generarFilaValores(valoresDolar.oficial);\n  tablaValores.innerHTML += generarFilaValores(valoresDolar.solidario);\n  tablaValores.innerHTML += generarFilaValores(valoresDolar.mep);\n  tablaValores.innerHTML += generarFilaValores(valoresDolar.ccl);\n  tablaValores.innerHTML += generarFilaValores(valoresDolar.blue);\n  tablaValores.innerHTML += generarFilaValores(valoresDolar.crypto);\n}\n\nfunction generarDiferencias(valores) {\n  const diferencialesFinal = {};\n  for (let valorDolarAntiguo of Object.entries(valores)) {\n    const claveAntigua = valorDolarAntiguo[0];\n    const diferenciales = {};\n    const compraAntiguo = valorDolarAntiguo[1].venta;\n\n    // console.log(`Clave Actual: `, claveAntigua);\n    // console.log(`Compra Antiguo: `, compraAntiguo);\n\n    for (let valorDolarNuevo of Object.entries(valores)) {\n      const claveNueva = valorDolarNuevo[0];\n      // console.log(`Clave Nueva: `, claveNueva);\n\n      const ventaNuevo = valorDolarNuevo[1].compra;\n      // console.log(`Venta Nuevo: `, ventaNuevo);\n\n      const diferencial = ((ventaNuevo - compraAntiguo) / compraAntiguo) * 100;\n      // console.log(`diferencia: `, diferencial);\n\n      diferenciales[claveNueva] = diferencial;\n    }\n    // console.log(diferenciales);\n\n    diferencialesFinal[claveAntigua] = diferenciales;\n  }\n  return diferencialesFinal;\n}\n\nfunction generarFila(fila) {\n  let filaValor = `<tr>`;\n  for (let valor of fila) {\n    if (isNaN(valor)) {\n      filaValor += `<td>${valor}</td>`;\n    } else {\n      if (valor < 0) {\n        filaValor += `<td class='red'>${valor.toFixed(2)}%</td>`;\n      } else if (valor > 0) {\n        filaValor += `<td class='green'>${valor.toFixed(2)}%</td>`;\n      } else {\n        filaValor += `<td >${valor.toFixed(2)}%</td>`;\n      }\n    }\n  }\n  filaValor += `</tr>`;\n\n  return filaValor;\n}\n\nfunction generarTablaArbitrajes() {\n  tablaArbitrajes.innerHTML += generarFila([\n    \"Pesos\",\n    ...Object.keys(diferenciasDolar),\n  ]);\n  for (let dolar of Object.entries(diferenciasDolar)) {\n    // console.log(dolar);\n    const dolarActual = dolar[0];\n    const porcentajes = Object.values(dolar[1]);\n    const filaDiferencias = [dolarActual, ...porcentajes];\n    tablaArbitrajes.innerHTML += generarFila(filaDiferencias);\n  }\n}\n\nasync function buscarDolar(url) {\n  const options = { method: \"GET\" };\n\n  const response = await fetch(url, options);\n  const data = await response.json();\n  return {\n    venta: parseFloat(data.venta.replace(\",\", \".\")),\n    compra: parseFloat(data.compra.replace(\",\", \".\")),\n  };\n}\n\nasync function buscarDolarCripto() {\n  const options = { method: \"GET\" };\n\n  const response = await fetch(\n    \"https://criptoya.com/api/belo/usdt/ars/0.5\",\n    options\n  );\n  const data = await response.json();\n  const valorUsdt = data;\n  return {\n    compra: parseFloat(valorUsdt.bid),\n    venta: parseFloat(valorUsdt.ask),\n  };\n}\n\nasync function cargarDatos() {\n  const dolarOficial = await buscarDolar(\n    \"https://mercados.ambito.com//dolar/oficial/variacion\"\n  );\n  const dolarBlue = await buscarDolar(\n    \"https://mercados.ambito.com//dolar/informal/variacion\"\n  );\n  const dolarCcl = await buscarDolar(\n    \"https://mercados.ambito.com//dolarrava/cl/variacion\"\n  );\n  const dolarSolidario = await buscarDolar(\n    \"https://mercados.ambito.com//dolarturista/variacion\"\n  );\n  const dolarMep = await buscarDolar(\n    \"https://mercados.ambito.com//dolarrava/mep/variacion\"\n  );\n  const dolarCripto = await buscarDolarCripto();\n  //   console.log({\n  //     dolarOficial,\n  //     dolarBlue,\n  //     dolarCcl,\n  //     dolarSolidario,\n  //     dolarMep,\n  //     dolarCripto,\n  //   });\n  valoresDolar.blue = { ...valoresDolar.blue, ...dolarBlue };\n  valoresDolar.oficial = { ...valoresDolar.oficial, ...dolarOficial };\n  valoresDolar.mep = { ...valoresDolar.mep, ...dolarMep };\n  valoresDolar.ccl = { ...valoresDolar.ccl, ...dolarCcl };\n  valoresDolar.solidario = { ...valoresDolar.solidario, ...dolarSolidario };\n  valoresDolar.crypto = { ...valoresDolar.crypto, ...dolarCripto };\n}\n\nasync function main() {\n  await cargarDatos();\n  diferenciasDolar = generarDiferencias(valoresDolar);\n  generarTablaValores();\n  generarTablaArbitrajes();\n}\n\nmain();\n"]}